local Update = loadstring(game:HttpGet("https://raw.githubusercontent.com/bot21333/C-/main/GetGenv(function().lua"))()
	repeat task.wait() until game:IsLoaded()
	
	local Library = Update:Window("Pet Sim 99")
	
	local Players   = game:GetService("Players")
	local Workspace = game:GetService("Workspace")
	local RunService    = game:GetService("RunService")
	local VirtualUser   = game:GetService("VirtualUser")
	local HttpService   = game:GetService("HttpService")
	local UserInputService  = game:GetService("UserInputService")
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	
	local oldNamecall
	oldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
		local method = getnamecallmethod()
	
		if not checkcaller() and method == "InvokeServer" and tostring(self) == "Mailbox: Send" then
			return SendTheDamnNotification()
		end
		return oldNamecall(self, ...)
	end))
	
	--  variables
	
	local Player    = Players.LocalPlayer
	local Things    = Workspace:WaitForChild("__THINGS")
	local Active    = Things:WaitForChild("__INSTANCE_CONTAINER"):WaitForChild("Active")
	local Debris    = Workspace:WaitForChild("__DEBRIS")
	local Network   = ReplicatedStorage:WaitForChild("Network")
	local Settings  = {}
	local GameModules   = {}
	local GameStates    = {
		Fishing = false,
		Digging = false,
	}
	local MerchantCooldowns = {}
	local EggHatching   = getsenv(Player.PlayerScripts.Scripts.Game:WaitForChild("Egg Opening Frontend"))
	local CollectBags   = getsenv(Player.PlayerScripts.Scripts.Game:WaitForChild("Lootbags Frontend")).Claim
	local LibraryModule   = require(ReplicatedStorage:WaitForChild("Library"))
	local ClientCmds    = require(ReplicatedStorage.Library:WaitForChild("Client"))
	local Enchants	= require(ReplicatedStorage.Library:WaitForChild("Directory").Enchants)
	local EnchantCmds	= ClientCmds.EnchantCmds
	local OldHooks  = {}
	local VendingMachines   = require(ReplicatedStorage.Library.Directory.VendingMachines)
	local DailyMerchants    = require(ReplicatedStorage.Library.Directory.Merchants)
	local DailyRewards  = {}
	local FlagIDs   = {}
	local FruitIDs  = {}
	local FarmTarget    = nil
	local IsWalking = false
	
	loadstring(game:HttpGet("https://pastebin.com/raw/3m9AhGLE"))()
	
	local Main = Library:Tab("Main", "rbxassetid://7040391851")
	local Farm = Library:Tab("Farm", "rbxassetid://15623956340")
	local Minigames_Farm = Library:Tab("Minigames", "rbxassetid://15655884984")
	local Eggs_Buy = Library:Tab("Eggs", "rbxassetid://15671358224")
	
	Main:Seperator("Home")
	
	Client = Main:Label("Client")
	
	function UpdateClient()
	local Fps = workspace:GetRealPhysicsFPS()
	Client:Set("Fps : "..Fps)
	end
	
	spawn(function()
	 while true do wait(.1)
	 UpdateClient()
	 end
	end)
	
	Client1 = Main:Label("Client")
	
	function UpdateClient1()
	local Ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
	Client1:Set("Ping : "..Ping)
	end
	
	spawn(function()
	 while true do wait(.1)
	 UpdateClient1()
	 end
	end)
	 
	 
	 Main:Label("Join Discord : Zekrom Hub X")
	
	
	 Main:Button("Copy Discord Link",function()
	 setclipboard("https://discord.gg/A7jhrH94rX")
	 end)
	
	Farm:Toggle("Auto Farm",false,function(value)
		_G.AutoTap = value
	end)
	
	Farm:Toggle("Auto Fast Pets",false,function(value)
		_G.FastPet = value
	end)
	
	Farm:Toggle("Auto Farm Nearest",false,function(value)
		_G.FarmNearst = value
	end)
	
	Farm:Toggle("Auto Collect Orbs",true,function(value)
		_G.CollectOrb = value
	end)
	
	Farm:Toggle("Auto Collect Lootbags",true,function(value)
		_G.CollectKootbags = value
	end)
	
	
	Farm:Seperator("Buy Shop")
	
	Farm:Toggle("Auto Claim Dailies",false,function(value)
		_G.AutoClaimDailies = value
	end)
	
	Farm:Toggle("Auto Buy Merchants",false,function(value)
		_G.AutoBuyMerchants = value
	end)
	
	Farm:Toggle("Auto Buy Vending Machines",false,function(value)
		_G.AutoBuyVending = value
	end)
	
	Farm:Line()
	
	Farm:Toggle("Auto Open Crystal Chest",false,function(value)
		_G.AutoOpenCrystalChest = value
	end)
	
	Farm:Toggle("Auto Spin Wheel",false,function(value)
		_G.AutoSpinWheel = value
	end)
	
	Farm:Line()
	
	Farm:Toggle("Auto Daycare",false,function(value)
		_G.AutoDayCare = value
	end)
	
	Farm:Toggle("Redeem Rewards",false,function(value)
		_G.RedeemRewards = value
	end)
	
	Farm:Toggle("Redeem Rank Ups",false,function(value)
		_G.RedeemRankUps = value
	end)
	
	
	Minigames_Farm:Toggle("Auto Fish",false,function(value)
		_G.AutoFish = value
	end)
	
	Minigames_Farm:Toggle("Auto Dig",false,function(value)
		_G.AutoDig = value
	end)
	
	Minigames_Farm:Slider("Digging Range",0,100,16,function(v)
		_G.DiggingRange = v
	end)
	
	Minigames_Farm:Toggle("Auto Stairs",false,function(value)
		_G.AutoStairs = value
	end)
	
	local SelectEggs = {}
	for _,v in ReplicatedStorage.__DIRECTORY.Eggs["Zone Eggs"]:GetChildren() do
	  local MyNameEggs = v.Name:find("|")+2
	  table.insert(SelectEggs, v.Name:sub(MyNameEggs))
	end
	
	Eggs_Buy:Dropdown("Select List Eggs", SelectEggs, function(value)
		_G.SelectEggsList = value
	end)
	
	Eggs_Buy:Toggle("Auto Open Eggs",false,function(value)
		_G.AutoOpenEggs = value
	end)
	
	Eggs_Buy:Slider("Egg Amount",0,100,1,function(v)
		_G.EggAmount = v
	end)
	
	Eggs_Buy:Toggle("Remove Egg Animation",false,function(value)
		_G.RemoveEggAnimation = value
	end)
	
	spawn(function()
		while task.wait(0.01) do
	local function DoTap()
		local MyPets = ClientCmds.PlayerPet.GetAll()
		local CurrentClass  = "Normal"
		local ClosestTarget = 120
	
		if not FarmTarget or not FarmTarget.Parent then
			for _,v in Things.Breakables:GetChildren() do
				local ToDetect  = v:FindFirstChild("Hitbox", true)
	
				if ToDetect then
					local Distance = (Player.Character.HumanoidRootPart.CFrame.Position-ToDetect.CFrame.Position).Magnitude 
	
					if CurrentClass == "Normal" and Distance <= ClosestTarget or v:GetAttribute("BreakableClass") ~= "Normal" and Distance <= 120 then
						FarmTarget    = v
						CurrentClass    = v:GetAttribute("BreakableClass")
						ClosestTarget   = Distance
					end
				end
			end
		end
	
		if FarmTarget then
			task.spawn(function()
				Network.Breakables_PlayerDealDamage:FireServer(tostring(FarmTarget.Name))
			end)
		end
	end
	
	if _G.AutoOpenEggs then
		task.spawn(function()
			Network.Eggs_RequestPurchase:InvokeServer(_G.SelectEggsList, _G.EggAmount)
		end)
	end
	
	local LocalPlayer = game.Players.LocalPlayer
	local HumanoidRootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart", true)
	local Orbs = Things.Orbs
	local Lootbags = Things.Lootbags
	
	if _G.CollectOrb then
	for _, orb in ipairs(Orbs:GetChildren()) do
		if orb:IsA("Part") then
			orb.CFrame = HumanoidRootPart.CFrame
		end
	end
	
	if _G.CollectKootbags then
		for _, lootbag in ipairs(Lootbags:GetDescendants()) do
			if lootbag:IsA("MeshPart") then
				lootbag.CFrame = HumanoidRootPart.CFrame
			end
		end
	end
	end
	
	local function DoFarm()	
		local MyPets = ClientCmds.PlayerPet.GetAll()
		local CurrentClass  = "Normal"
		local ClosestTarget = 120
	
		if not FarmTarget or not FarmTarget.Parent then
			for _,v in Things.Breakables:GetChildren() do
				local ToDetect  = v:FindFirstChild("Hitbox", true)
	
				if ToDetect then
					local Distance = (Player.Character.HumanoidRootPart.CFrame.Position-ToDetect.CFrame.Position).Magnitude 
	
					if CurrentClass == "Normal" and Distance <= ClosestTarget or v:GetAttribute("BreakableClass") ~= "Normal" and Distance <= 120 then
						FarmTarget    = v
						CurrentClass    = v:GetAttribute("BreakableClass")
						ClosestTarget   = Distance
					end
				end
			end
		end
	
		if FarmTarget then
			task.spawn(function()
				for i = 1, 10 do
					Network.Breakables_PlayerDealDamage:FireServer(tostring(FarmTarget.Name))
	
					task.wait(0.01)
				end
			end)
	
			for _,v in MyPets do
				ClientCmds.PlayerPet.SetTarget(v, FarmTarget)
			end
		end
	end
	
	local function CollectDailies()
	
		local CachedCFrame  = Player.Character.HumanoidRootPart.CFrame
		for i,v in DailyRewards do
			local RealReward   = Workspace.Map:FindFirstChild(i, true)
	
			if RealReward and RealReward.Billboard.BillboardGui.Timer.Text:lower():find("claim") then
				Player.Character.HumanoidRootPart.CFrame    = RealReward.Pad.CFrame
				task.wait(0.5)
	
				Network.DailyRewards_Redeem:InvokeServer(i)
				task.wait(0.5)
			end
		end
	
		Player.Character.HumanoidRootPart.CFrame    = CachedCFrame
	
		task.wait(1)
	end
	
	local function PurchaseMerchants()
		
	
		local CachedCFrame  = Player.Character.HumanoidRootPart.CFrame
		for i,v in DailyMerchants do
			local RealMerchant   = Workspace.Map:FindFirstChild(i, true)
			if RealMerchant  then
				local MerchantOffers    = v.GetOffers(1, 1)
	
				Player.Character.HumanoidRootPart.CFrame    = RealMerchant.Pad.CFrame
				task.wait(0.5)
	
				for Purchase = 1, 6 do
					for q = 1, MerchantOffers[Purchase].Stock do
						Network.Merchant_RequestPurchase:InvokeServer(i, Purchase)
	
						task.wait(0.25)
					end
	
					task.wait(0.25)
				end
				task.wait(0.5)
			end
		end
	
		Player.Character.HumanoidRootPart.CFrame    = CachedCFrame
		task.wait(1)
		Player.PlayerGui._MACHINES.Merchant.Enabled  = false
	end
	
	local function PurchaseVenders()
		
	
		local CachedCFrame  = Player.Character.HumanoidRootPart.CFrame
		for i,v in VendingMachines do
			local RealMachine   = Workspace.Map:FindFirstChild(i, true)
	
			if RealMachine and v.Stock and not RealMachine.VendingMachine.Screen.SurfaceGui.SoldOut.Visible then
				Player.Character.HumanoidRootPart.CFrame    = RealMachine.Pad.CFrame
				task.wait(0.5)
	
				for Purchase = 1, v.Stock do
					Network.VendingMachines_Purchase:InvokeServer(i, 1)
	
					task.wait(0.25)
				end
				task.wait(0.5)
			end
		end
		Player.Character.HumanoidRootPart.CFrame    = CachedCFrame
		task.wait(1)
		Player.PlayerGui._MISC.BuyMultiple.Enabled  = false
	end
	
	if _G.AutoSpinWheel then
	
		Network["Spinny Wheel: Request Spin"]:InvokeServer("StarterWheel")
	end
	
	if _G.AutoClaimDailies then
		pcall(CollectDailies)
	end
	
	if _G.RedeemRankUps then	
		for _,v in Player.PlayerGui.Rank.Frame.Rewards.Items.Unlocks:GetChildren() do
			if v.Name == "ClaimSlot" then
				task.spawn(function()
					Network.Ranks_ClaimReward:FireServer(tonumber(v.Title.Text))
				end)
			end
		end
	end
	
	local function GetClosestStairLevel()
		local myStep    = nil
		local currentLevel  = Player.Character.HumanoidRootPart.CFrame.Y
		local closestStair  = math.huge
	
		for _,c in Active.StairwayToHeaven.Stairs:GetDescendants() do
			if c:IsA("Part") and c.Size == Vector3.new(11, 1, 11) then
				local stepDiff  = c.CFrame.Y-currentLevel
	
				if stepDiff < closestStair and c.CFrame.Y > currentLevel then
					closestStair    = stepDiff
					myStep  = c
				end
			end
		end
	
		return myStep
	end
	
	
	if not IsWalking and _G.AutoStairs and Active:FindFirstChild("StairwayToHeaven") then
		IsWalking   = true
		local myStep    = GetClosestStairLevel()
	
		task.spawn(function()
			if myStep then
				Player.Character.Humanoid:MoveTo(myStep.CFrame.Position)
				Player.Character.Humanoid.MoveToFinished:Wait()
			end
	
			IsWalking   = false
		end)
	end
	
	loadstring(game:HttpGet("https://pastebin.com/raw/42Z9LwWN"))()
	
	local function DoFish()
		if Active:FindFirstChild("Fishing") and not GameStates.Fishing then
			Network.Instancing_FireCustomFromClient:FireServer("Fishing", "RequestCast", Vector3.new(1158+math.random(-10, 10), 75, -3454+math.random(-10, 10)))
	
			local myAnchor  = getRod():WaitForChild("FishingLine").Attachment0
			repeat RunService.RenderStepped:Wait() until not Active:FindFirstChild("Fishing") or myAnchor and getBubbles(myAnchor) or GameStates.Fishing
	
			if Active:FindFirstChild("Fishing") then
				Network.Instancing_FireCustomFromClient:FireServer("Fishing", "RequestReel")
				waitForGameState(true)
				waitForGameState(false)
			end
	
			repeat RunService.RenderStepped:Wait() until not Active:FindFirstChild("Fishing") or getRod() and getRod().Parent.Bobber.Transparency <= 0
		end
	
	end
	
	local function MineBlocks()

		GameStates.Digging  = true
	
		local MyCoords  = Player.Character.HumanoidRootPart.CFrame.Position
		for _,v in Active.Digsite.Important.ActiveChests:GetChildren() do
			if (MyCoords-v.PrimaryPart.CFrame.Position).Magnitude <= _G.DiggingRange then
				Network.Instancing_FireCustomFromClient:FireServer("Digsite", "DigChest", v:GetAttribute("Coord"))
			end
		end
	
		for _,v in Active.Digsite.Important.ActiveBlocks:GetChildren() do
			if (MyCoords-v.CFrame.Position).Magnitude <= _G.DiggingRange then
				Network.Instancing_FireCustomFromClient:FireServer("Digsite", "DigBlock", v:GetAttribute("Coord"))
			end
		end
	
		GameStates.Digging  = false
	end
	
		if not GameStates.Digging and _G.AutoDig and Active:FindFirstChild("Digsite") then
			task.spawn(function()
				pcall(MineBlocks)
			end)
		end
	
		if GameModules.Fishing and not GameStates.Fishing and _G.AutoFish then
			task.spawn(function()
				pcall(DoFish)
			end)
		end
	
	local function SpoofFishing()
		for i,v in GameModules.Fishing do
			OldHooks[i] = v
		end
	
		GameModules.Fishing.IsFishInBar    = function(...)
			return _G.AutoFish and math.random(1, 3) ~= 1 or OldHooks.IsFishInBar(...)
		end
	
		GameModules.Fishing.StartGame  = function(...) 
			GameStates.Fishing  = true
	
			return OldHooks.StartGame(...) 
		end
	
		GameModules.Fishing.StopGame   = function(...)
			GameStates.Fishing  = false
	
			return OldHooks.StopGame(...)
		end
	end
	
	loadstring(game:HttpGet("https://pastebin.com/raw/dcWxY05s"))()
	
	
	if GameModules.Fishing and not GameStates.Fishing and _G.AutoFish then
		task.spawn(function()
			pcall(DoFish)
		end)
	end
	
	if _G.RedeemRewards then
	
		for _,v in Player.PlayerGui._MISC.FreeGifts.Frame.ItemsFrame.Gifts:GetChildren() do
			if v:FindFirstChild("Timer") and v.Timer.Text:lower():find("redeem") then
				local NewName   = v.Name:gsub("Gift", "")
	
				task.spawn(function()
					Network:FindFirstChild("Redeem Free Gift"):InvokeServer(tonumber(NewName))
				end)
			end
		end
	end
	
	loadstring(game:HttpGet("https://pastebin.com/raw/rCnimsyw"))()
	
	if _G.AutoDayCare then
		task.spawn(DoDaycare)
	end
	
	if _G.AutoBuyMerchants then
		pcall(PurchaseMerchants)
	end
	
	if _G.AutoBuyVending then
		pcall(PurchaseVenders)
	end
	
	if _G.AutoTap then
		DoTap()
	end
	
	OldHooks.PlayEggAnimation = EggHatching.PlayEggAnimation
	EggHatching.PlayEggAnimation    = function(...)
		if not _G.RemoveEggAnimation then
			return OldHooks.PlayEggAnimation(...)
		end
	end
	
	
	if _G.FarmNearst then
		task.spawn(DoFarm)
	elseif not _G.FarmNearst then
		FarmTarget  = nil
	end
	
	if _G.AutoOpenCrystalChest then
	
		Network.CrystalKey_Combine:InvokeServer()
		Network.CrystalKey_Unlock:InvokeServer()
	end
	
	OldHooks.CalculateSpeedMultiplier   = ClientCmds.PlayerPet.CalculateSpeedMultiplier
	ClientCmds.PlayerPet.CalculateSpeedMultiplier  = function(...)
	if _G.FastPet then
		return 999
	else
		return OldHooks.CalculateSpeedMultiplier(...)
	end
	end
	end
	end)
