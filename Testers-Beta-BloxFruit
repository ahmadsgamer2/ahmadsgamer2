local Update = loadstring(game:HttpGet("https://raw.githubusercontent.com/bot21333/C-/main/GetGenv(function().lua"))()

local Library = Update:Window("Pet Sim 99")

local Main = Library:Tab("Main", "rbxassetid://7040391851")
local Farm = Library:Tab("Farm", "rbxassetid://15623956340")
local Minigames_Farm = Library:Tab("Minigames", "rbxassetid://15655884984")

Main:Seperator("Home")

Client = Main:Label("Client")

function UpdateClient()
local Fps = workspace:GetRealPhysicsFPS()
Client:Set("Fps : "..Fps)
end

spawn(function()
 while true do wait(.1)
 UpdateClient()
 end
end)

Client1 = Main:Label("Client")

function UpdateClient1()
local Ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
Client1:Set("Ping : "..Ping)
end

spawn(function()
 while true do wait(.1)
 UpdateClient1()
 end
end)
 
 
 Main:Label("Join Discord : Zekrom Hub X")


 Main:Button("Copy Discord Link",function()
 setclipboard("https://discord.gg/A7jhrH94rX")
 end)

local Players   = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService    = game:GetService("RunService")
local VirtualUser   = game:GetService("VirtualUser")
local HttpService   = game:GetService("HttpService")
local UserInputService  = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

--  variables

local Player    = Players.LocalPlayer
local Things    = Workspace:WaitForChild("__THINGS")
local Active    = Things:WaitForChild("__INSTANCE_CONTAINER"):WaitForChild("Active")
local Debris    = Workspace:WaitForChild("__DEBRIS")
local Network   = ReplicatedStorage:WaitForChild("Network")
local Settings  = {}
local Cooldowns = {
	Fishing = tick(),
	OpenEggs    = tick(),
	OrbCollect  = tick(),
	PlaceFlag   = tick(),
	Vending = tick(),
	Daily = tick(),
	Dig = tick(),
	Fruits  = tick(),
	TNT   = tick(),
	Farm    = tick(),
	Rewards = tick(),
	Ranks = tick(),
	Daycare = tick(),
	Merchants   = tick(),
	Stairs  = tick(),
	Enchants	= tick(),
	Wheel = tick(),
	Key = tick(),
}
local GameModules   = {}
local GameStates    = {
	Fishing = false,
	Digging = false,
}
local MerchantCooldowns = {}
local EggHatching   = getsenv(Player.PlayerScripts.Scripts.Game:WaitForChild("Egg Opening Frontend"))
local CollectBags   = getsenv(Player.PlayerScripts.Scripts.Game:WaitForChild("Lootbags Frontend")).Claim
local LibraryModule   = require(ReplicatedStorage:WaitForChild("Library"))
local ClientCmds    = require(ReplicatedStorage.Library:WaitForChild("Client"))
local Enchants	= require(ReplicatedStorage.Library:WaitForChild("Directory").Enchants)
local EnchantCmds	= ClientCmds.EnchantCmds
local OldHooks  = {}
local VendingMachines   = require(ReplicatedStorage.Library.Directory.VendingMachines)
local DailyMerchants    = require(ReplicatedStorage.Library.Directory.Merchants)
local DailyRewards  = {}
local FlagIDs   = {}
local FruitIDs  = {}
local SettingsOrder  = {
	{"Automatics", {
		{"AutoTap", false},
		{"Fast Pets", false},
		{"Autofarm Nearest", false},
		{"Auto Collect Drops", false},
		{"Divider"},
		{"Selected Flag",  "Coins Flag"},
		{"Auto Place Flag", false},
		{"Divider"},
		{"Auto Drop TNT", false},
		{"TNT Delay", 15},
		{"Divider"},
		{"Auto Claim Dailies", false},
		{"Auto Buy Merchants", false},
		{"Auto Buy Vending Machines", false},
		{"Divider"},
		{"Auto Open Crystal Chest", false},
		{"Auto Spin Wheel", false},
		{"Divider"},
		{"Auto Daycare", false},
		{"Redeem Rewards", false},
		{"Redeem Rank Ups", false},
	}},
	{"Minigames", {
		{"Auto Fish", false},
		{"Divider"},
		{"Auto Dig", false},
		{"Digging Range", 16},
		{"Divider"},
		{"Auto Stairs", false},
	}},
	{"Eggs", {
		{"Auto Open Eggs", false},
		{"Egg Amount", 1},
		{"Selected Egg", "Cracked Egg"},
		{"Divider"},
		{"Remove Egg Animation", false},
	}},
	{"Fruits", {
		
	}},
	{"Enchants", {
	}},
}
local FarmTarget    = nil
local IsWalking = false
local FruitOrder	= {}
local FruitTally	= 1
local EnchantLabels	= {}

loadstring(game:HttpGet("https://pastebin.com/raw/3m9AhGLE"))()


local RealFlagNames = {}
local RealFruitNames = {}

for _,v in ReplicatedStorage.__DIRECTORY.ZoneFlags:GetChildren() do
	local SubbedName = v.Name:gsub("ZoneFlag | ", "")

	table.insert(RealFlagNames, SubbedName)
end

for _,v in ReplicatedStorage.__DIRECTORY.Fruits:GetChildren() do
	local SubbedName = v.Name:gsub("Fruit | ", "")

	table.insert(RealFruitNames, SubbedName)
end

for _,v in LibraryModule.Items.All.Globals.All() do
	local RealName  = GetNameFromJSON(v)
	local RealID    = GetIdFromJSON(v)

	if table.find(RealFlagNames, RealName) then
		FlagIDs[RealName] = RealID
	elseif table.find(RealFruitNames, RealName) and not FruitIDs[RealName] then
		FruitIDs[RealName] = RealID

		table.insert(SettingsOrder[4][2], {"Auto Eat "..RealName, false})
		table.insert(FruitOrder, RealName)
	end
end

Farm:Toggle("Auto Farm",false,function(value)
	Settings.Automatics["AutoTap"] = value
end)

Farm:Toggle("Auto Fast Pets",false,function(value)
	Settings.Automatics["Fast Pets"] = value
end)

Farm:Toggle("Auto Farm Nearest",false,function(value)
	Settings.Automatics["Autofarm Nearest"] = value
end)

Farm:Seperator("Buy Shop")

Farm:Toggle("Auto Claim Dailies",false,function(value)
	Settings.Automatics["Auto Claim Dailies"] = value
end)

Farm:Toggle("Auto Buy Merchants",false,function(value)
	Settings.Automatics["Auto Buy Merchants"] = value
end)

Farm:Toggle("Auto Buy Vending Machines",false,function(value)
	Settings.Automatics["Auto Buy Vending Machines"] = value
end)

Farm:Line()

Farm:Toggle("Auto Open Crystal Chest",false,function(value)
	Settings.Automatics["Auto Open Crystal Chest"] = value
end)

Farm:Toggle("Auto Spin Wheel",false,function(value)
	Settings.Automatics["Auto Spin Wheel"] = value
end)

Farm:Line()

Farm:Toggle("Auto Daycare",false,function(value)
	Settings.Automatics["Auto Daycare"] = value
end)

Farm:Toggle("Redeem Rewards",false,function(value)
	Settings.Automatics["Redeem Rewards"] = value
end)

Farm:Toggle("Redeem Rank Ups",false,function(value)
	Settings.Automatics["Redeem Rank Ups"] = value
end)


Minigames_Farm:Toggle("Auto Fish",false,function(value)
	Settings.Minigames["Auto Fish"] = value
end)

Minigames_Farm:Toggle("Auto Dig",false,function(value)
	Settings.Minigames["Auto Dig"] = value
end)

Minigames_Farm:Slider("Digging Range",0,100,16,function(v)
    Settings.Minigames["Digging Range"] = v
end)

Minigames_Farm:Toggle("Auto Stairs",false,function(value)
	Settings.Minigames["Auto Stairs"] = value
end)



while task.wait(0.01) do
local function DoTap()
	local MyPets = ClientCmds.PlayerPet.GetAll()
	local CurrentClass  = "Normal"
	local ClosestTarget = 120

	if not FarmTarget or not FarmTarget.Parent then
		for _,v in Things.Breakables:GetChildren() do
			local ToDetect  = v:FindFirstChild("Hitbox", true)

			if ToDetect then
				local Distance = (Player.Character.HumanoidRootPart.CFrame.Position-ToDetect.CFrame.Position).Magnitude 

				if CurrentClass == "Normal" and Distance <= ClosestTarget or v:GetAttribute("BreakableClass") ~= "Normal" and Distance <= 120 then
					FarmTarget    = v
					CurrentClass    = v:GetAttribute("BreakableClass")
					ClosestTarget   = Distance
				end
			end
		end
	end

	if FarmTarget then
		task.spawn(function()
			Network.Breakables_PlayerDealDamage:FireServer(tostring(FarmTarget.Name))
		end)
	end
end

local function DoFarm()
	Cooldowns.Farm  = tick()

	local MyPets = ClientCmds.PlayerPet.GetAll()
	local CurrentClass  = "Normal"
	local ClosestTarget = 120

	if not FarmTarget or not FarmTarget.Parent then
		for _,v in Things.Breakables:GetChildren() do
			local ToDetect  = v:FindFirstChild("Hitbox", true)

			if ToDetect then
				local Distance = (Player.Character.HumanoidRootPart.CFrame.Position-ToDetect.CFrame.Position).Magnitude 

				if CurrentClass == "Normal" and Distance <= ClosestTarget or v:GetAttribute("BreakableClass") ~= "Normal" and Distance <= 120 then
					FarmTarget    = v
					CurrentClass    = v:GetAttribute("BreakableClass")
					ClosestTarget   = Distance
				end
			end
		end
	end

	if FarmTarget then
		task.spawn(function()
			for i = 1, 10 do
				Network.Breakables_PlayerDealDamage:FireServer(tostring(FarmTarget.Name))

				task.wait(0.01)
			end
		end)

		for _,v in MyPets do
			ClientCmds.PlayerPet.SetTarget(v, FarmTarget)
		end
	end
end

local function CollectDailies()
	Cooldowns.Daily = tick()

	local CachedCFrame  = Player.Character.HumanoidRootPart.CFrame
	for i,v in DailyRewards do
		local RealReward   = Workspace.Map:FindFirstChild(i, true)

		if RealReward and RealReward.Billboard.BillboardGui.Timer.Text:lower():find("claim") then
			Player.Character.HumanoidRootPart.CFrame    = RealReward.Pad.CFrame
			task.wait(0.5)

			Network.DailyRewards_Redeem:InvokeServer(i)
			task.wait(0.5)
		end
	end

	Player.Character.HumanoidRootPart.CFrame    = CachedCFrame

	task.wait(1)
end

local function PurchaseMerchants()
	Cooldowns.Merchants   = tick()

	local CachedCFrame  = Player.Character.HumanoidRootPart.CFrame
	for i,v in DailyMerchants do
		local RealMerchant   = Workspace.Map:FindFirstChild(i, true)
		if RealMerchant and (not MerchantCooldowns[i] or tick()-MerchantCooldowns[i] >= v.RefreshRate) then
			MerchantCooldowns[i]    = tick()
			local MerchantOffers    = v.GetOffers(1, 1)

			Player.Character.HumanoidRootPart.CFrame    = RealMerchant.Pad.CFrame
			task.wait(0.5)

			for Purchase = 1, 6 do
				for q = 1, MerchantOffers[Purchase].Stock do
					Network.Merchant_RequestPurchase:InvokeServer(i, Purchase)

					task.wait(0.25)
				end

				task.wait(0.25)
			end
			task.wait(0.5)
		end
	end

	Player.Character.HumanoidRootPart.CFrame    = CachedCFrame
	task.wait(1)
	Player.PlayerGui._MACHINES.Merchant.Enabled  = false
end

local function PurchaseVenders()
	Cooldowns.Vending   = tick()

	local CachedCFrame  = Player.Character.HumanoidRootPart.CFrame
	for i,v in VendingMachines do
		local RealMachine   = Workspace.Map:FindFirstChild(i, true)

		if RealMachine and v.Stock and not RealMachine.VendingMachine.Screen.SurfaceGui.SoldOut.Visible then
			Player.Character.HumanoidRootPart.CFrame    = RealMachine.Pad.CFrame
			task.wait(0.5)

			for Purchase = 1, v.Stock do
				Network.VendingMachines_Purchase:InvokeServer(i, 1)

				task.wait(0.25)
			end
			task.wait(0.5)
		end
	end
	Player.Character.HumanoidRootPart.CFrame    = CachedCFrame
	task.wait(1)
	Player.PlayerGui._MISC.BuyMultiple.Enabled  = false
end

if tick()-Cooldowns.Wheel >= 1 and Settings.Automatics["Auto Spin Wheel"] then
	Cooldowns.Wheel = tick()

	Network["Spinny Wheel: Request Spin"]:InvokeServer("StarterWheel")
end

if tick()-Cooldowns.Daily >= 10 and Settings.Automatics["Auto Claim Dailies"] then
	pcall(CollectDailies)
end

if tick()-Cooldowns.Ranks >= 1 and Settings.Automatics["Redeem Rank Ups"] then
	Cooldowns.Ranks   = tick()

	for _,v in Player.PlayerGui.Rank.Frame.Rewards.Items.Unlocks:GetChildren() do
		if v.Name == "ClaimSlot" then
			task.spawn(function()
				Network.Ranks_ClaimReward:FireServer(tonumber(v.Title.Text))
			end)
		end
	end
end

local function GetClosestStairLevel()
	local myStep    = nil
	local currentLevel  = Player.Character.HumanoidRootPart.CFrame.Y
	local closestStair  = math.huge

	for _,c in Active.StairwayToHeaven.Stairs:GetDescendants() do
		if c:IsA("Part") and c.Size == Vector3.new(11, 1, 11) then
			local stepDiff  = c.CFrame.Y-currentLevel

			if stepDiff < closestStair and c.CFrame.Y > currentLevel then
				closestStair    = stepDiff
				myStep  = c
			end
		end
	end

	return myStep
end


if not IsWalking and tick()-Cooldowns.Stairs >= 0.1 and Settings.Minigames["Auto Stairs"] and Active:FindFirstChild("StairwayToHeaven") then
	IsWalking   = true
	local myStep    = GetClosestStairLevel()

	task.spawn(function()
		if myStep then
			Player.Character.Humanoid:MoveTo(myStep.CFrame.Position)
			Player.Character.Humanoid.MoveToFinished:Wait()
		end

		IsWalking   = false
	end)
end

loadstring(game:HttpGet("https://pastebin.com/raw/42Z9LwWN"))()

local function DoFish()
	if Active:FindFirstChild("Fishing") and not GameStates.Fishing then
		Network.Instancing_FireCustomFromClient:FireServer("Fishing", "RequestCast", Vector3.new(1158+math.random(-10, 10), 75, -3454+math.random(-10, 10)))

		local myAnchor  = getRod():WaitForChild("FishingLine").Attachment0
		repeat RunService.RenderStepped:Wait() until not Active:FindFirstChild("Fishing") or myAnchor and getBubbles(myAnchor) or GameStates.Fishing

		if Active:FindFirstChild("Fishing") then
			Network.Instancing_FireCustomFromClient:FireServer("Fishing", "RequestReel")
			waitForGameState(true)
			waitForGameState(false)
		end

		repeat RunService.RenderStepped:Wait() until not Active:FindFirstChild("Fishing") or getRod() and getRod().Parent.Bobber.Transparency <= 0
	end

	Cooldowns.Fishing = tick()
end

local function MineBlocks()
	Cooldowns.Dig   = tick()
	GameStates.Digging  = true

	local MyCoords  = Player.Character.HumanoidRootPart.CFrame.Position
	for _,v in Active.Digsite.Important.ActiveChests:GetChildren() do
		if (MyCoords-v.PrimaryPart.CFrame.Position).Magnitude <= Settings.Minigames["Digging Range"] then
			Network.Instancing_FireCustomFromClient:FireServer("Digsite", "DigChest", v:GetAttribute("Coord"))
		end
	end

	for _,v in Active.Digsite.Important.ActiveBlocks:GetChildren() do
		if (MyCoords-v.CFrame.Position).Magnitude <= Settings.Minigames["Digging Range"] then
			Network.Instancing_FireCustomFromClient:FireServer("Digsite", "DigBlock", v:GetAttribute("Coord"))
		end
	end

	GameStates.Digging  = false
end

	if tick()-Cooldowns.Dig >= 0.05 and not GameStates.Digging and Settings.Minigames["Auto Dig"] and Active:FindFirstChild("Digsite") then
		task.spawn(function()
			pcall(MineBlocks)
		end)
	end

	if tick()-Cooldowns.Fishing >= 1.5 and GameModules.Fishing and not GameStates.Fishing and Settings.Minigames["Auto Fish"] then
		task.spawn(function()
			pcall(DoFish)
		end)
	end

local function SpoofFishing()
	for i,v in GameModules.Fishing do
		OldHooks[i] = v
	end

	GameModules.Fishing.IsFishInBar    = function(...)
		return Settings.Minigames["Auto Fish"] and math.random(1, 3) ~= 1 or OldHooks.IsFishInBar(...)
	end

	GameModules.Fishing.StartGame  = function(...) 
		GameStates.Fishing  = true

		return OldHooks.StartGame(...) 
	end

	GameModules.Fishing.StopGame   = function(...)
		GameStates.Fishing  = false

		return OldHooks.StopGame(...)
	end
end

if tick()-Cooldowns.Fishing >= 1.5 and GameModules.Fishing and not GameStates.Fishing and Settings.Minigames["Auto Fish"] then
	task.spawn(function()
		pcall(DoFish)
	end)
end

if tick()-Cooldowns.Rewards >= 1 and Settings.Automatics["Redeem Rewards"] then
	Cooldowns.Rewards   = tick()

	for _,v in Player.PlayerGui._MISC.FreeGifts.Frame.ItemsFrame.Gifts:GetChildren() do
		if v:FindFirstChild("Timer") and v.Timer.Text:lower():find("redeem") then
			local NewName   = v.Name:gsub("Gift", "")

			task.spawn(function()
				Network:FindFirstChild("Redeem Free Gift"):InvokeServer(tonumber(NewName))
			end)
		end
	end
end

loadstring(game:HttpGet("https://pastebin.com/raw/rCnimsyw"))()

if tick()-Cooldowns.Daycare >= 5 and Settings.Automatics["Auto Daycare"] then
	task.spawn(DoDaycare)
end

if tick()-Cooldowns.Merchants >= 10 and Settings.Automatics["Auto Buy Merchants"] then
	pcall(PurchaseMerchants)
end

if tick()-Cooldowns.Vending >= 10 and Settings.Automatics["Auto Buy Vending Machines"] then
	pcall(PurchaseVenders)
end

if Settings.Automatics["AutoTap"] then
	DoTap()
end

if tick()-Cooldowns.Farm >= 0.02 and Settings.Automatics["Autofarm Nearest"] then
	task.spawn(DoFarm)
elseif not Settings.Automatics["Autofarm Nearest"] then
	FarmTarget  = nil
end

if tick()-Cooldowns.Key >= 1 and Settings.Automatics["Auto Open Crystal Chest"] then
	Cooldowns.Key = tick()

	Network.CrystalKey_Combine:InvokeServer()
	Network.CrystalKey_Unlock:InvokeServer()
end

OldHooks.CalculateSpeedMultiplier   = ClientCmds.PlayerPet.CalculateSpeedMultiplier
ClientCmds.PlayerPet.CalculateSpeedMultiplier  = function(...)
if Settings.Automatics["Fast Pets"] then
	return 999
else
	return OldHooks.CalculateSpeedMultiplier(...)
end
end
end
