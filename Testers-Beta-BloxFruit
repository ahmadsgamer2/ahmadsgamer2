if _G.Chest_Farm then
    loadstring(game:HttpGet("https://raw.githubusercontent.com/ahmadsgamer2/ahmadsgamer2/main/ChestFarm_BF.lua"))()
elseif _G.FruitFinder then
    loadstring(game:HttpGet("https://raw.githubusercontent.com/ahmadsgamer2/ahmadsgamer2/main/FruitFinder.lua"))()
else

local Update = loadstring(game:HttpGet("https://raw.githubusercontent.com/bot21333/C-/main/ZekromHubX_V2_UIC%2B%2B.lua"))()
local Library = Update:Window()
local Information_Tab = Library:CreateTab({
    Name = "Information"
})

repeat wait() until game.Players
repeat wait() until game.Players.LocalPlayer
repeat wait() until game.ReplicatedStorage
repeat wait() until game.ReplicatedStorage:FindFirstChild("Remotes");
repeat wait() until game.Players.LocalPlayer:FindFirstChild("PlayerGui");
repeat wait() until game.Players.LocalPlayer.PlayerGui:FindFirstChild("Main");
repeat wait() until game:GetService("Players")
repeat wait() until game:GetService("Players").LocalPlayer.Character:FindFirstChild("Energy")

wait(0.1)

if not game:IsLoaded() then repeat game.Loaded:Wait() until game:IsLoaded() end

local Information_Section = Information_Tab:CreateSection({
    Name = "Main",
    Side = "Left"
})
local MainSection = Information_Tab:CreateSection({
    Name = "Config",
    Side = "Right"
})


local Client  = Information_Section:AddLabel({Name = "..."})

function UpdateClient()
    local Fps = workspace:GetRealPhysicsFPS()
    Client:Set("FPS: "..Fps)
end
    
spawn(function()
    while true do wait(.1)
        UpdateClient()
    end
end)

local Client1  = Information_Section:AddLabel({Name = "..."})

function UpdateClient1()
    local Ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
    Client1:Set("PING: "..Ping)
end
    
spawn(function()
    while true do wait(.1)
        UpdateClient1()
    end
end)

Information_Section:AddButton({
	Name = "Join Discord - Zekrom Hub X",
	Callback = function()
		setclipboard("https://discord.gg/NdY3TXK6Ex")
	end
})

local Gameid = game.PlaceId
if Gameid == 2753915549 then
W1 = true
World1 = true
OldWorld = true
elseif Gameid == 4442272183 then
W2 = true
World2 = true
NewWorld = true
elseif Gameid == 7449423635 then
W3 = true
World3 = true
ThreeWorld = true
end

_G.Settings = {
    AutoFarm = false,
    DoubleQuest = false,
    NeareastFarm = false,
    Mirage = false ,
    MirageHop = false,
    Auto_Gear = false,
    TeleportGear = false,
    AutoNewWorld = false,
    TweenToFruitSpawn = false,
    AutoSaber = false,
    AutoPole = false,
    TeleportIsland = false,

--[World 2]
    AutoThirdSea = false,
    AutoBartiloQuest = false,
    Auto_Evo_Race_V2 = false,
    AutoDarkCoat = false,
    AutoSwanGlasses = false,
    AutoTrueTriplKatana = false,
    AutoRengoku = false,
    AutoEctoplasm = false,
    AutoFactory = false,

    --[World 3]
    AutoRainbowHaki = false,
    AutoBuyEnchanmentHakiHop = false,
    AutoBuyLegendarySwordHop = false,
    AutoEliteHunter = false,
    AutoMusketeerHat = false,
    AutoBuddySword = false,
    AutoFarmBone = false,
    SpawnBossHallow = false,
    AutoKenHakiV2 = false,
    AutoObservation = false,
    AutoObservation_Hop = false,
    AutoGodHuman = false,
    AutoCavander = false,
    AutoCursedDualKatana = false,
    AutoYamaSword = false,
    AutoTushitaSword = false,
    AutoSerpentBow = false,
    AutoDarkDagger = false,
    AutoCakePrince = false,
    AutoDoughV2 = false,
    AutoHolyTorch = false,
    AutoBuddySwords = false,
    AutoFarmBossHallow = false,
    MobAura = false,
    YamaQuest2 = false,
    YamaQuest1 = false,
    Auto_Cursed_Dual_Katana = false,
    Tushita_Quest2 = false,
    Tushita_Quest1 = false,
    TeleporttoSeaBeast = false,
    AutoEvent = false,
    TPTOBOAT = false,
    AutoFarmMaterial = false,
    Teleporttop = false,
    AutoFarmChest = false,

    --[Boss]
    AutoAllBoss = false,
    AutoBossSelect = false,
    AutoFarmBoss = false,

    --[Mastery]
    AutoFarmFruitMastery = false,
    AutoFarmGunMastery = false,
    FarmMasterySwordList = false,

    --[Raids]
    AutoRaids = false,
    AutoNextPlace = false
}

local VirtualInputManager = game:GetService("VirtualInputManager")
local TweenService = game:GetService("TweenService")
local tween = game:service"TweenService"
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local GuiService = game:GetService("GuiService")
repeat wait(0) until game:IsLoaded()
	
	if game:GetService("Players").LocalPlayer.PlayerGui.Main:FindFirstChild("ChooseTeam")  then
		repeat wait()
			if game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Main").ChooseTeam.Visible == true then
				if _G.Team == "Pirate" then
					for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.TextButton.Activated)) do                                                                                                
						v.Function()
					end
				elseif _G.Team == "Marine" then
					for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Marines.Frame.TextButton.Activated)) do                                                                                                
						v.Function()
					end
				else
					for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.TextButton.Activated)) do                                                                                                
						v.Function()
					end
				end
			end
		until game.Players.LocalPlayer.Team ~= nil and game:IsLoaded()
	end
loadstring(game:HttpGet("https://pastebin.com/raw/gk5ZGF2f"))()

WeaponList = {"Melee","Sword", "Devil Fruit" }

MainSection:AddDropdown({
    Name = "Select Weapon",
    Flag = "Select_Weapon",
    Value = "Melee",
    List = WeaponList,
    Callback = function(value)
        SelectWeapon = value
    end
})
local MethodList = {"Upper","Behind","Below" }

MainSection:AddDropdown({
    Name = "Select Method",
    Flag = "Select_Method",
    Value = "Upper",
    List = MethodList,
    Callback = function(value)
        _G.Method = value
    end
})

FastAttackList = {"Slow","Fast","Extreme",}

MainSection:AddDropdown({
    Name = "Select Attack Type",
    Flag = "Select_AttackType",
    Value = "Fast",
    List = FastAttackList,
    Callback = function(value)
        SelectSpeedFast = value
        if SelectSpeedFast == "Slow" then
            _G.Fast_Delay = 0.080
        elseif SelectSpeedFast == "Fast" then
            _G.Fast_Delay = 0.029
        elseif SelectSpeedFast == "Extreme" then
            _G.Fast_Delay = 0
        end
    end
})


task.spawn(function()
    while wait() do
    pcall(function()
        if SelectWeapon == "Melee" then
            for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                if v.ToolTip == "Melee" then
                    if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                        _G.SelectWeapon = v.Name
                    end
                end
            end
        elseif SelectWeapon == "Sword" then
            for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                if v.ToolTip == "Sword" then
                    if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                        _G.SelectWeapon = v.Name
                    end
                end
            end
        elseif SelectWeapon == "Devil Fruit" then
            for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                if v.ToolTip == "Blox Fruit" then
                    if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                        _G.SelectWeapon = v.Name
                    end
                end
            end
        else
            for i ,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                if v.ToolTip == "Melee" then
                    if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                        _G.SelectWeapon = v.Name
                    end
                end
            end
        end
    end)
end
end)

MainSection:AddToggle{
    Name = "Fast Attack",
    Flag = "Fast_Attack",
    Value = true,
    Callback  = function(value)
        FastAttack = value
    end
}

MainSection:AddSlider({
    Name = "Distance Farm",
    Flag = "Distance_Farm",
    Value = 30,
    Min = 1,
    Max = 100,
    Textbox = true,
    Format = function(value)
        _G.DistanceAutoFarm = value
    end
})

task.spawn(function()
    while task.wait(0) do
    pcall(function()
        if _G.Method == "Behind" then
            MethodFarm = CFrame.new(0, 0,  _G.DistanceAutoFarm)
        elseif _G.Method == "Below" then
            MethodFarm = CFrame.new(0, - _G.DistanceAutoFarm, 0) * CFrame.Angles(math.rad(90), 0, 0)
        elseif _G.Method == "Upper" then
            MethodFarm = CFrame.new(0,  _G.DistanceAutoFarm, 0) * CFrame.Angles(math.rad(0), 0, 0)
        else
            MethodFarm = CFrame.new(0,  _G.DistanceAutoFarm, 0)
        end
    end)
    end
end)

task.spawn(function()
    pcall(function()
    while task.wait(_G.Fast_Delay) do
        if FastAttack then
            AttackFunction()
           end
        end
    end)
end)

ChooseFarm = {"Level","Bone","Katakuri"}

MainSection:AddDropdown({
    Name = "Choose Farm List",
    Flag = "Choose_Farm",
    Value = "Level",
    List = ChooseFarm,
    Callback = function(value)
        _G.ChooseFarm = value
    end
})

MainSection:AddToggle{
    Name = "Enable Farm",
    Flag = "Enable_Farm",
    Value = false,
    Callback  = function(value)
        _G.AutoFarmBone  = value
        _G.Settings.AutoFarmBone = value
        _G.AutoFarm = value
        _G.Settings.AutoFarm = value
        SaveSettings()
        _G.DoubleQuest = value
        getgenv().noclip = value
        if value == false then
            toTarget(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame)
        end
    end
}

loadstring(game:HttpGet("https://pastebin.com/raw/wVgNqXah"))()

--[[CheckNotifyComplete]]
function CheckNotifyComplete()
for i, v in pairs(game:GetService("Players")["LocalPlayer"].PlayerGui:FindFirstChild("Notifications"):GetChildren()) do
    if v.Name == "NotificationTemplate" then
        if string.lower(v.Text):find("quest completed") then
            pcall(function()
                v:Destroy()
            end)
            return true
        end
    end
end
return false
end

local NoLoopDuplicate = false
local SubQuest = false
local oldmob = Name
local oldcheckquest = NameMon
local  GetQuestBone = game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest

task.spawn(function()
    while task.wait() do
        pcall(function()
            if _G.Settings.AutoFarmBone then
                if _G.ChooseFarm == "Bone" then
                if GetQuestBone.Visible == false and _G.AccetpQuestBone then
                    CFrameQuestBone = CFrame.new(-9513, 172, 6079)
                    if (CFrameQuestBone.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 20 then
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartQuest", "HauntedQuest2", 2)
                else
                    toTarget(CFrameQuestBone)
                end
        elseif GetQuestBone.Visible == true or not _G.AccetpQuestBone then
                if game:GetService("Workspace").Enemies:FindFirstChild("Reborn Skeleton") or game:GetService("Workspace").Enemies:FindFirstChild("Living Zombie") or game:GetService("Workspace").Enemies:FindFirstChild("Demonic Soul") or game:GetService("Workspace").Enemies:FindFirstChild("Posessed Mummy") then
                    for i, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                        if v.Name == "Reborn Skeleton" or v.Name == "Living Zombie" or v.Name == "Demonic Soul" or v.Name == "Posessed Mummy" then
                            if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                repeat
                                    task.wait()
                                    StartMagnet = true
                                    FastAttack = true
                                    if _G.AutoHaki then
                                        if not game.Players.LocalPlayer.Character:FindFirstChild("HasBuso") then
                                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buso")
                                        end
                                    end
                                    EquipWeapon(_G.SelectWeapon)
                                    PosMon = v.HumanoidRootPart.CFrame
                                    if not _G.FastAttack then
                                        game:GetService 'VirtualUser':CaptureController()
                                        game:GetService 'VirtualUser':Button1Down(Vector2.new(1280, 672))
                                    end
                                    v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                                    v.HumanoidRootPart.Transparency = 1
                                    v.Humanoid.JumpPower = 0
                                    v.Humanoid.WalkSpeed = 0
                                    v.HumanoidRootPart.CanCollide = false
                                    v.Humanoid:ChangeState(11)
                                    toTarget(v.HumanoidRootPart.CFrame * MethodFarm)
                                until not _G.AutoFarmBone  or v.Humanoid.Health <= 0 or not v.Parent or v.Humanoid.Health <= 0
                                StartMagnet = false
                                FastAttack = false
                            end
                        end
                    end
                else
                    two(CFrame.new(-9504.8564453125, 172.14292907714844, 6057.259765625))
                    end
                end
            end
        end
    end)
end
end)

task.spawn(function()
while task.wait() do
pcall(function()
    if _G.Settings.AutoFarm then
        if _G.DoubleQuest then
            if _G.ChooseFarm == "Level" then
            if SubQuest == true then
                if LevelFarm then
                    if tonumber(LevelFarm - 1) ~= 0 then
                        CheckOldQuest(tonumber(LevelFarm - 1))
                    end
                end
            else
                CheckQuest()
                oldmob = Name
                oldcheckquest = NameMon
                spawn(function()
                    pcall(function()
                        if NoLoopDuplicate == false then
                            if CheckNotifyComplete() and _G.AutoFarm then
                                NoLoopDuplicate = true
                                while task.wait() do
                                    SubQuest = true
                                    if CheckNotifyComplete() or _G.AutoFarm == false then
                                        break;
                                    end
                                end
                                SubQuest = false
                                NoLoopDuplicate = false
                            end
                        end
                    end)
                end)
                if SubQuest == true then
                    if LevelFarm then
                        if tonumber(LevelFarm - 1) ~= 0 then
                            CheckOldQuest(tonumber(LevelFarm - 1))
                        end
                    end
                end
            end
        else
            CheckQuest()
        end
        AutoFarmLevel()
    end
end
end)
end
end)


end
