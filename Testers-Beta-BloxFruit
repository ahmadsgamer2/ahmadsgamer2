local Auth = {}

getgenv().SendDiagnostic = false
getgenv().DebugPrint = false
local LOADSTRING  = clonefunction(loadstring)
local HttpGet  = clonefunction(game.HttpGet)
local req = (request or syn.request) or game.HttpGet

if islclosure(getgenv().request or syn.request) then while true do end end -- ANTI REQUEST TAMPERING
if islclosure(getgenv().tostring) then while true do end end -- ANTI TOSTRING TAMPERING
if islclosure(getgenv().setmetatable) then while true do end end -- ANTI SETMETATALBE TAMPERING
if islclosure(getgenv().hookfunc) then while true do end end -- ANTI Hookfunc TAMPERING
if islclosure(getgenv().hookfunction) then while true do end end -- ANTI Hookfunction TAMPERING
if islclosure(getgenv().gethwid or getgenv().hwid_get) then while true do end end -- ANTI GetHwid TAMPERING

local function RandomString(length) -- RANDOMSTRING
    local randomString = ""
    for i = 1, length do
        local randomNumber = math.random(97, 122)
        randomString = randomString .. string.char(randomNumber)
    end
    return tostring(randomString)
end

print("Anti-Http SPY")
print("________________________________________________________")



function Auth:LoadScript(Configs) -- Load Script | PandaAuth
    spawn(function()
        pcall(game.HttpGet, game, getgenv().setmetatable({}, {
            __tostring = function()
                while true do end;return "HAHAHAHAHAHA"
            end,
        }))
        req(getgenv().setmetatable({
            Url = "https://example.net",
            Method = "GET"
        },{
            __newindex = function(self,key,value)
                return rawset(self,key,setmetatable({},{
                    __tostring = function()
                        while true do end;return "HAHAHAHAHAHA"
                    end
                }))
            end,
            __tostring = function()
                while true do end;return "HAHAHAHAHAHA"
            end,
            __len = function()
                while true do end;
            end,
            __concat = function()
                spawn(function()
                    game:Shutdown()
                end)
                while true do end;
            end,
        }))
    end)
    
    local x = {
        url = "https://google.com",
        fakeurl = "https://google.com/%s",
        faketable = {
            "BloxFruit",
            "KingLegacy",
            "Minecraft.lua"
        }
    }

    local random_ = math.random(5,13)
    for i = 1,20 do
        if random_ == i then
            LOADSTRING(HttpGet(Configs.url))();
        else
            local randomNum = math.random(1,2)
            if randomNum == 1 then
                text = Configs.fakeurl:format(Configs.faketable[math.random(1,#Configs.faketable)])
            elseif randomNum == 2 then
                text = Configs.fakeurl .. RandomString(7)
            end
            HttpGet(text)
        end
    end
end

function Auth:HttpGet(Configs)
    spawn(function()
        pcall(game.HttpGet, game, getgenv().setmetatable({}, {
            __tostring = function()
                while true do end;return "HAHAHAHAHAHA"
            end,
        }))
        req(getgenv().setmetatable({
            Url = "https://example.net",
            Method = "GET"
        },{
            __newindex = function(self,key,value)
                return rawset(self,key,setmetatable({},{
                    __tostring = function()
                        while true do end;return "HAHAHAHAHAHA"
                    end
                }))
            end,
            __tostring = function()
                while true do end;return "HAHAHAHAHAHA"
            end,
            __len = function()
                while true do end;
            end,
            __concat = function()
                spawn(function()
                    game:Shutdown()
                end)
                while true do end;
            end,
        }))
    end)

    local x = {
        url = "https://google.com",
        fakeurl = "https://google.com/%s",
        faketable = {
            "BloxFruit",
            "KingLegacy",
            "Minecraft.lua"
        }
    }

    local HttpGot
    local random_ = math.random(5,13)
    for i = 1,20 do
        if random_ == i then
            HttpGot = HttpGet(Configs.url)
        else
            local randomNum = math.random(1,2)
            if randomNum == 1 then
                text = Configs.fakeurl:format(Configs.faketable[math.random(1,#Configs.faketable)])
            elseif randomNum == 2 then
                text = Configs.fakeurl .. RandomString(7)
            end
            HttpGet(text)
        end
    end

    return HttpGot
end

pcall(game.HttpGet, game, getgenv().setmetatable({}, {
    __tostring = function()
        while true do end;return "HAHAHAHAHAHA"
    end,
}))
-- SECOND PROTECT MAYBE WORK
req(getgenv().setmetatable({
    Url = "https://example.net",
	Method = "GET"
},{
    __newindex = function(self,key,value)
        return rawset(self,key,setmetatable({},{
            __tostring = function()
                while true do end;return "HAHAHAHAHAHA"
            end
        }))
    end,
    __tostring = function()
        while true do end;return "HAHAHAHAHAHA"
    end,
    __len = function()
        while true do end;
    end,
    __concat = function()
        spawn(function()
            game:Shutdown()
        end)
        while true do end;
    end,
}))

local antihookrequest
antihookrequest = hookfunction(getgenv().hookfunction and getgenv().hookfunc,function(x,y,z)
    if x == req then
        while true do end
        return "HAHAHA"
    end
    return antihookrequest(x,y,z)
end)

local antisetreadonly
antisetreadonly = hookfunction(getgenv().setreadonly,function(x,y)
    if x == Auth then
        return antisetreadonly(x,true)
    end
    return antisetreadonly(x,y)
end)

setmetatable(Auth, {
    __newindex = function()
    end,
    __metatable = false
})
setreadonly(Auth,true)

local HttpSpy = Instance.new("ScreenGui")
local Backgroud = Instance.new("Frame")
local TitleText = Instance.new("TextLabel")
local MainContainer = Instance.new("ScrollingFrame")
local TemplateText = Instance.new("TextLabel")
local UIListLayout = Instance.new("UIListLayout")
 
--Properties:
 
HttpSpy.Name = "HttpSpy"
HttpSpy.Parent = game.CoreGui
HttpSpy.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
 
Backgroud.Name = "Backgroud"
Backgroud.Parent = HttpSpy
Backgroud.Active = true
Backgroud.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
Backgroud.BorderColor3 = Color3.fromRGB(255, 0, 4)
Backgroud.BorderSizePixel = 2
Backgroud.Position = UDim2.new(0.0586419739, 0, 0.24924925, 0)
Backgroud.Size = UDim2.new(0, 406, 0, 222)
 
TitleText.Name = "TitleText"
TitleText.Parent = Backgroud
TitleText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TitleText.BackgroundTransparency = 1.000
TitleText.BorderSizePixel = 0
TitleText.Size = UDim2.new(0, 406, 0, 25)
TitleText.Font = Enum.Font.RobotoMono
TitleText.Text = "HTTP Spy v. 1"
TitleText.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleText.TextScaled = true
TitleText.TextSize = 14.000
TitleText.TextWrapped = true
 
MainContainer.Name = "MainContainer"
MainContainer.Parent = Backgroud
MainContainer.Active = true
MainContainer.BackgroundColor3 = Color3.fromRGB(46, 46, 46)
MainContainer.BorderSizePixel = 0
MainContainer.Position = UDim2.new(0, 0, 0.112612613, 0)
MainContainer.Size = UDim2.new(0, 406, 0, 197)
MainContainer.ScrollBarThickness = 6
 
UIListLayout.Parent = MainContainer
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
 
 
function drag (s)
script.Parent = s;
script.Parent.Position = UDim2.new (0, script.Parent.Parent.AbsoluteSize.X * script.Parent.Position.X.Scale + script.Parent.Position.X.Offset, 0, script.Parent.Parent. AbsoluteSize.Y * script.Parent.Position.Y.Scale + script.Parent.Position.Y.Offset)
local i = false
script.Parent.MouseEnter:Connect(function ()
i = true
end);
script.Parent.MouseLeave:Connect(function ()
i = false;
end)
local uis = game:GetService("UserInputService")
local up = false;
local m = game:GetService("Players")['LocalPlayer']:GetMouse()
uis.InputBegan:Connect(function(key)
if key.UserInputType == Enum.UserInputType.MouseButton1 then
up = false 
local offsetX = m.X-script.Parent.Position.X.Offset
local offsetY = m.Y-script.Parent.Position.Y.Offset 
if i then
repeat
warn("BRRRRR")
s:TweenPosition (UDim2.new (0, m.X-offsetX, 0, m.Y-offsetY), 'Out', 'Sine', 0.4, true)
wait ();
until up
offsetX = 0
offsetY = 0
end;
end
end)
uis.InputEnded:Connect(function(key)
if key.UserInputType == Enum.UserInputType.MouseButton1 then
up = true 
end
end)
 
 
end;
drag(Backgroud)
 
 
local script = Instance.new('LocalScript', MainContainer)
 
TemplateText.Name = "TemplateText"
TemplateText.Parent = HttpSpy.Backgroud.MainContainer.LocalScript
TemplateText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TemplateText.BackgroundTransparency = 0.950
TemplateText.BorderSizePixel = 0
TemplateText.Position = UDim2.new(3.75832236e-08, 0, 0, 0)
TemplateText.Size = UDim2.new(1.00000012, 0, 0, 20)
TemplateText.Font = Enum.Font.SourceSansSemibold
TemplateText.Text = "ur mom"
TemplateText.TextColor3 = Color3.fromRGB(255, 255, 255)
TemplateText.TextScaled = true
TemplateText.TextSize = 14.000
TemplateText.TextWrapped = true
TemplateText.TextXAlignment = Enum.TextXAlignment.Left
 
local Template = script.TemplateText
 
local function registerDynamicScrollingFrame(frame)
local layout = frame:FindFirstChildWhichIsA("UIListLayout")
local absoluteContentSize = layout.AbsoluteContentSize
frame.CanvasSize = UDim2.new(0, 0, 0, absoluteContentSize.Y)
layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
local absoluteContentSize = layout.AbsoluteContentSize
frame.CanvasSize = UDim2.new(0, 0, 0, absoluteContentSize.Y)
end)
end
 
local function Log(text,headers)
local Label = Template:Clone()
if headers and type(headers) == "table" then 
text = text .. " (HEADERS:"
for Index, Value in next, headers do 
text = text.. tostring(Index).. ": "..tostring(Value)
 
end
text = text .. ")"
end
Label.Text = text 
Label.Parent = script.Parent
 
end
registerDynamicScrollingFrame(MainContainer)
local HttpGet
 
HttpGet = hookfunction(game.HttpGet, function(self, url, ...)
Log("Http Get Request from: "..url)
 
return HttpGet(self, url, ...)
end)
 
local HttpPost
 
HttpPost = hookfunction(game.HttpPost, function(self, url, ...)
Log("Http Post Request from: "..url)
 
return HttpPost(self, url, ...)
end)
 
 
local RequestLog
 
if syn.request then 
 
RequestLog = hookfunction(syn.request, function(dat)
Log("syn.request from: "..dat.Url.." ("..dat.Method..")",dat.Headers)
 
return RequestLog(dat)
end)
local oldrequest = syn.request
syn.request = function(t)
    if analyzers.Http then
        writew("Syn Req Spy - "..tostring(t.Method))
        if t.Body then
            write("A "..tostring(t.Method).." request was sent to "..tostring(t.Url).."\n")
            write("Sending the following information: "..t.Body.."\n\n")
        else
            write("A "..tostring(t.Method).." request was sent to "..tostring(t.Url).."\n\n")
        end
    end
    if analyzers.EnabledHttpReq then writee("HTTP Request") return end
    if analyzers.EnabledWebhookReq and (string.find(t.Url, "https://discord.com/api/webhooks/") or string.find(t.Url, "https://discord.com/api/webhooks/")) then writee(" HTTP Request to discord webhook.\n\n") return; end
    return oldrequest(t)
end
 
 
else
error("YOUR EXPLOIT IS NOT SUPPORTED!")
end
